//******** AUTO GENERATED FILE, DO NOT EDIT.  *********

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ActivationKey {
  id      Int      @id @default(autoincrement())
  userEmail   String        @db.VarChar(255)
  expirationDate    DateTime
  organization      Organization     @relation(fields: [organizationId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  organizationId   Int
  userId   Int
}

model Comment {
  id      Int      @id @default(autoincrement())
  content   String      @db.VarChar(255)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  task      Task     @relation(fields: [taskId], references: [id])
  userId   Int
  taskId   Int
}

model Organization {
  id      Int      @id @default(autoincrement())
  name   String   @unique
  users   OrganizationsUsers[]
  activationKeys   ActivationKey[]
  projects   Project[]

}

model OrganizationsUsers {
  id      Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int // relation scalar field (used in the `@relation` attribute above)
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId Int // relation scalar field (used in the `@relation` attribute above)
  roleInOranisation    String       @db.VarChar(255)
}

model Project {
  id      Int      @id @default(autoincrement())
  name   String     @db.VarChar(255)
  createdAt DateTime @default(now())
  timeEstimation   Int?     @db.Int
  beginningDate DateTime?
  durationTime Int?     @db.Int
  organization      Organization     @relation(fields: [organizationId], references: [id])
  organizationId   Int
  tasks Task[]
  users ProjectsUsers[]
}

model ProjectsUsers {
  id      Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int // relation scalar field (used in the `@relation` attribute above)
  project   Project @relation(fields: [projectId], references: [id])
  projectId Int // relation scalar field (used in the `@relation` attribute above)
}

model Task {
  id      Int      @id @default(autoincrement())
  title   String        @db.VarChar(255)
  description   String      @db.VarChar(255)
  createdAt DateTime @default(now())
  timeEstimation   Int?     @db.Int
  beginningDate DateTime?
  durationTime Int?     @db.Int
  project      Project     @relation(fields: [projectId], references: [id])
  projectId   Int
  users TasksUsers[]
  comments Comment[]
}

model TasksUsers {
  id      Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int // relation scalar field (used in the `@relation` attribute above)
  task   Task @relation(fields: [taskId], references: [id])
  taskId Int // relation scalar field (used in the `@relation` attribute above)
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  firstname    String       @db.VarChar(255)
  lastname   String     @db.VarChar(255)
  userRole   String     @db.VarChar(255)
  password   String     @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profilePicture String?        @db.VarChar(255)
  organizations OrganizationsUsers[]
  activationKeys   ActivationKey[]
  projects   ProjectsUsers[]
  tasks   TasksUsers[]
  comments   Comment[]
}